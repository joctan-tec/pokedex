apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-ha.fullname" . }}
spec:
  serviceName: {{ include "redis-ha.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis-ha.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis-ha.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-auth-secret
                  key: redis-password
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-auth-secret
                  key: redis-username
          command:
          - redis-server
          args:
          - --requirepass
          - $(REDIS_PASSWORD)
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
        {{- if .Values.exporter.enabled }}
        - name: redis-exporter
          image: "{{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}"
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: {{ .Values.exporter.port }}
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-auth-secret
                  key: redis-password
          args:
            - "--redis.addr=redis://localhost:{{ .Values.service.port }}"
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
